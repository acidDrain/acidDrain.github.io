{"version":3,"sources":["webpack:///./src/components/Header.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["TitleAndDescription","data","site","siteMetadata","title","description","className","query","render","Layout","edges","allMarkdownRemark","Header","map","frontmatter","node","key","path","to","date","excerpt","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Fragment","StaticQuery","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"iTAGMA,EAAsB,SAAC,GAAc,IAAD,IAAXC,KACOC,KAAKC,aAAjCC,EADgC,EAChCA,MAAOC,EADyB,EACzBA,YACf,OACE,yBAAKC,UAAU,UACb,4BAAKF,GACL,2BAAIC,KAKK,aACb,OACE,kBAAC,IAAD,CACEE,MAAK,aAULC,OAAQ,SAAAP,GAAI,OAAI,kBAAC,EAAD,CAAqBA,KAAMA,KAX7C,U,UCfJ,sCAMA,IA0BaM,EAAK,aAiBHE,UA3CA,SAAC,GAAc,IACpBC,EADmB,EAAXT,KACOU,kBAAfD,MACR,OACE,6BACE,kBAACE,EAAD,MACA,yBAAKN,UAAU,aACZI,EAAMG,KAAI,YAAe,IAChBC,EADe,EAAXC,KACJD,YACR,OACE,yBAAKE,IAAKF,EAAYG,MACpB,yBAAKX,UAAU,aACb,kBAAC,IAAD,CAAMY,GAAIJ,EAAYG,MAAOH,EAAYV,OAD3C,IAC0D,IACvDU,EAAYK,MAEf,uBAAGb,UAAU,WAAWQ,EAAYM,aAI1C,6BACE,kBAAC,IAAD,CAAMF,GAAG,SAAT,sB,kCCzBV,wIAcyBG,QAAOC,QAdhC,IAgBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAAT,GAA4E,IAAzCC,EAAwC,EAAxCA,gBAAiB1B,EAAuB,EAAvBA,KAAMM,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OACzDoB,EAAY3B,EACdA,EAAKA,KACL0B,EAAgBpB,IAAUoB,EAAgBpB,GAAON,KAErD,OACE,kBAAC,IAAM4B,SAAP,KACGD,GAAapB,EAAOoB,IACnBA,GAAa,uDAKrB,IAAME,EAAc,SAAAC,GAAU,IACpB9B,EAAkC8B,EAAlC9B,KAAMM,EAA4BwB,EAA5BxB,MAAOC,EAAqBuB,EAArBvB,OAAQwB,EAAaD,EAAbC,SAE7B,OACE,kBAACT,EAAmBU,SAApB,MACG,SAAAN,GAAe,OACd,kBAACD,EAAD,CACEzB,KAAMA,EACNM,MAAOA,EACPC,OAAQA,GAAUwB,EAClBL,gBAAiBA,S,qBCzC3B,IAAsBO,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEjB,IAAMkB,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-index-js-f9011a423096e1ab38a3.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst TitleAndDescription = ({ data }) => {\n  const { title, description } = data.site.siteMetadata\n  return (\n    <div className=\"header\">\n      <h2>{title}</h2>\n      <p>{description}</p>\n    </div>\n  )\n}\n\nexport default () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          site {\n            siteMetadata {\n              title\n              description\n            }\n          }\n        }\n      `}\n      render={data => <TitleAndDescription data={data} />}\n    ></StaticQuery>\n  )\n}\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Header from \"../components/Header\"\n\nimport \"./index.css\"\n\nconst Layout = ({ data }) => {\n  const { edges } = data.allMarkdownRemark\n  return (\n    <div>\n      <Header />\n      <div className=\"postsList\">\n        {edges.map(({ node }) => {\n          const { frontmatter } = node\n          return (\n            <div key={frontmatter.path}>\n              <div className=\"postTitle\">\n                <Link to={frontmatter.path}>{frontmatter.title}</Link>-{\" \"}\n                {frontmatter.date}\n              </div>\n              <p className=\"excerpt\">{frontmatter.excerpt}</p>\n            </div>\n          )\n        })}\n        <div>\n          <Link to=\"/tags\">Browse By Tag</Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport const query = graphql`\n  query HomepageQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            date\n            excerpt\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}